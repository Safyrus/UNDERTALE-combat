MEMORY {
    ZP:      start = $0000, size = $0100,  type = rw,                                       define = yes;
    STK:     start = $0100, size = $0100,  type = rw;
    OAM:     start = $0200, size = $0100,  type = rw,                                       define = yes;
    FMS:     start = $0300, size = $0180,  type = rw,                                       define = yes;
    RAM:     start = $0480, size = $0380,  type = rw,                                       define = yes;
    RAMBNK:  start = $6000, size = $2000,  type = rw;
 
    HEADER:  start = $0000, size = $0010,  type = ro, file = %O, fill = yes, fillval = $00, define = yes;
    MD_BNK:  start = $A000, size = $2000,  type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank=0;
    MS_BNK:  start = $A000, size = $2000,  type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank=1;
    IT_BNK:  start = $8000, size = $2000,  type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank=2;
    MC_BNK:  start = $8000, size = $A000,  type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank=3;
    MA_BNK:  start = $8000, size = $10000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank=8;
    MI_BNK:  start = $8000, size = $10000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank=16;
    BNKTXT:  start = $8000, size = $10000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank=24;
    BNKMS0:  start = $A000, size = $2000,  type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank=32;
    BNKMS1:  start = $A000, size = $2000,  type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank=33;
    BNKMS2:  start = $A000, size = $2000,  type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank=34;
    BNKMS3:  start = $A000, size = $2000,  type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank=35;
    BNKMS4:  start = $A000, size = $2000,  type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank=36;
    BNKMS5:  start = $A000, size = $2000,  type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank=37;
    BNKMS6:  start = $A000, size = $2000,  type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank=38;
    BNKMS7:  start = $A000, size = $2000,  type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank=39;
    BNKMS8:  start = $A000, size = $2000,  type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank=40;
    BNKMS9:  start = $A000, size = $2000,  type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank=41;
    BNKMSA:  start = $A000, size = $2000,  type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank=42;
    BNKMSB:  start = $A000, size = $2000,  type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank=43;
    BNKMSC:  start = $A000, size = $2000,  type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank=44;
    BNKMSD:  start = $A000, size = $2000,  type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank=45;
    BNKMSE:  start = $A000, size = $2000,  type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank=46;
    BNKMSF:  start = $A000, size = $2000,  type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank=47;
    BNK:     start = $8000, size = $9C000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank=48;
    BNKINI:  start = $8000, size = $2000,  type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank=126;
    BNK127:  start = $E000, size = $2000,  type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank=127;
    CHR:     start = $0000, size = $100000,type = ro, file = %O, fill = yes, fillval = $00, define = yes;
}

SEGMENTS {
    HEADER:   load = HEADER,  type = ro;
 
    MMC5_RAM: load = RAMBNK,  type = bss, optional = yes;
 
    MONSTER_DATA:load=MD_BNK, type=ro;
    MONSTER_STRUCT_DATA:load=MS_BNK,type=ro;
    MONSTER_CODE_DATA:load=MC_BNK,type=ro;
    MONSTER_ANIM_DATA:load=MA_BNK,type=ro;
    MONSTER_IMG_DATA:load=MI_BNK,type=ro;

    TXT_BNK:  load = BNKTXT,  type = ro;
    ITEM_BNK: load = IT_BNK,  type = ro;

    MS0_BNK:  load = BNKMS0,  type = ro;
    MS1_BNK:  load = BNKMS1,  type = ro;
    MS2_BNK:  load = BNKMS2,  type = ro;
    MS3_BNK:  load = BNKMS3,  type = ro;
    MS4_BNK:  load = BNKMS4,  type = ro;
    MSD_BNK:  load = BNKMSD,  type = ro;
    MSE_BNK:  load = BNKMSE,  type = ro;
    MSF_BNK:  load = BNKMSF,  type = ro;

    INIT_BNK: load = BNKINI,  type = ro;
    LAST_BNK: load = BNK127,  type = ro;
    FMS_CODE: load = BNKINI,  type = ro,  define = yes;
    VECTORS:  load = BNK127,  type = ro,  start = $FFFA;
 
    STACK:    load = STK,     type = rw;
    OAM:      load = OAM,     type = rw;
    FMS_RAM:  load = FMS,     type = bss, define = yes;
    BSS:      load = RAM,     type = bss, define = yes;
    ZEROPAGE: load = ZP,      type = zp;
 
    CHARS:    load = CHR,     type = ro;
}
